<?php

function fjmqg_preprocess_node__dog(&$variables) {
  /** @var \Drupal\Core\Datetime\DateFormatterInterface $formatter */
  $date_formatter = \Drupal::service('date.formatter');

  $node = &$variables['node'];
  $date = $node->get('field_dog_age');

  $variables['age'] = $date_formatter->formatDiff($date->date->getTimestamp(), REQUEST_TIME, [
    'granularity' => 2,
    'return_as_object' => TRUE,
  ]);
  
  $config = \Drupal::config('unl_contact.settings');
  $variables['pets_help_description'] = $config->get('unl_contact.pets_help_description');
  $variables['pets_help_adopt_href'] = $config->get('unl_contact.pets_help_adopt_href');
  $variables['pets_help_adopt_label'] = $config->get('unl_contact.pets_help_adopt_label');
  $variables['pets_help_donate_href'] = $config->get('unl_contact.pets_help_donate_href');
  $variables['pets_help_donate_label'] = $config->get('unl_contact.pets_help_donate_label');
  $variables['pets_see_more_description'] = $config->get('unl_contact.pets_see_more_description');
  $variables['pets_see_more_label'] = $config->get('unl_contact.pets_see_more_label');
  $variables['pets_more_info_href'] = $config->get('unl_contact.pets_more_info_href');
  $variables['pets_more_info_label'] = $config->get('unl_contact.pets_more_info_label');
}

function fjmqg_preprocess_node__dog__teaser(&$variables) {
  /** @var \Drupal\Core\Datetime\DateFormatterInterface $formatter */
  $date_formatter = \Drupal::service('date.formatter');

  $node = &$variables['node'];
  $date = $node->get('field_dog_age');

  $variables['age'] = $date_formatter->formatDiff($date->date->getTimestamp(), REQUEST_TIME, [
    'granularity' => 2,
    'return_as_object' => TRUE,
  ]);
  

}

function fjmqg_preprocess_node__cat(&$variables) {
  /** @var \Drupal\Core\Datetime\DateFormatterInterface $formatter */
  $date_formatter = \Drupal::service('date.formatter');

  $node = &$variables['node'];
  $date = $node->get('field_cat_age');

  $variables['age'] = $date_formatter->formatDiff($date->date->getTimestamp(), REQUEST_TIME, [
    'granularity' => 2,
    'return_as_object' => TRUE,
  ]);
  
  $config = \Drupal::config('unl_contact.settings');
  $variables['pets_help_description'] = $config->get('unl_contact.pets_help_description');
  $variables['pets_help_adopt_href'] = $config->get('unl_contact.pets_help_adopt_href');
  $variables['pets_help_adopt_label'] = $config->get('unl_contact.pets_help_adopt_label');
  $variables['pets_help_donate_href'] = $config->get('unl_contact.pets_help_donate_href');
  $variables['pets_help_donate_label'] = $config->get('unl_contact.pets_help_donate_label');
  $variables['pets_see_more_description'] = $config->get('unl_contact.pets_see_more_description');
  $variables['pets_see_more_label'] = $config->get('unl_contact.pets_see_more_label');
  $variables['pets_more_info_href'] = $config->get('unl_contact.pets_more_info_href');
  $variables['pets_more_info_label'] = $config->get('unl_contact.pets_more_info_label');
}

function fjmqg_preprocess_node__cat__teaser(&$variables) {
  /** @var \Drupal\Core\Datetime\DateFormatterInterface $formatter */
  $date_formatter = \Drupal::service('date.formatter');

  $node = &$variables['node'];
  $date = $node->get('field_cat_age');

  $variables['age'] = $date_formatter->formatDiff($date->date->getTimestamp(), REQUEST_TIME, [
    'granularity' => 2,
    'return_as_object' => TRUE,
  ]);
}

function fjmqg_preprocess_region(&$variables) {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['lang'] = $language;
}

function fjmqg_preprocess_field(&$vars) {
  if ($vars['element']['#field_name'] == 'field_event_photo') {
    foreach($vars['items'] as $key => $item){
      $vars['items'][ $key ]['content']['#item_attributes']['class'][] = 'event-img';
    }
  }
}

/**
 * Implements hook_theme_suggestions_container_alter().
 */
function fjmqg_theme_suggestions_container_alter(array &$suggestions, array $variables) {
  $suggestions = [];
  if (isset($variables['element']['#form_element_type'])) {
    $suggestions[] = 'container__' . $variables['element']['#form_element_type'];
  }
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'container__' . $variables['element']['#form_id'];
//    echo '<pre>';
//    var_dump($variables['element']);
//    die();
  }
  if (isset($variables['element']['#form_element_type']) && isset($variables['element']['#form_id'])) {
    $suggestions[] = 'container__' . $variables['element']['#form_id'] . '__' . $variables['element']['#form_element_type'];
  }
  if (isset($variables['element']['#parents'][0]) && isset($variables['element']['#form_id'])) {
    $suggestions[] = 'container__' . $variables['element']['#form_id'] . '__' . $variables['element']['#parents'][0];
  }
 
}

/**
 * Implements hook_theme_suggestions_page_alter() to set 40x template suggestions.
 *
 * @param array $suggestions
 * @param array $variables
 */
function fjmqg_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $path_args = explode('/', trim(\Drupal::service('path.current')->getPath(), '/'));
  $suggestions = theme_get_suggestions($path_args, 'page');
  $http_error_suggestions = [
    'system.401' => 'page__401',
    'system.403' => 'page__403',
    'system.404' => 'page__404',
  ];

  $route_name = \Drupal::routeMatch()->getRouteName();
  if (isset($http_error_suggestions[$route_name])) {
    $suggestions[] = $http_error_suggestions[$route_name];
  }
}
